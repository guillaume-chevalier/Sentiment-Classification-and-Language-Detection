This is one of the worst-written programming books I have seen yet.  I'm sorry I bought it.  It appears to be written by a man who knows quite a bit about finance, and dangerously little about C++ programming.  Duffy's review correctly describes the main flaws.  I would add that (1) The book is not structured to build upon OO, GOF Patterns, or STL design principles; (2) The code does not follow even basic C++ coding conventions; (3) The images (screenshots) are agonizingly UNREADABLE; (4) The code listings are in ITALICS using a variable-pitch font [is COURIER font code listing so difficult to include in a $100 book???]; (5) No over-arching component object model is suggested ANYWHERE in the book.Some of the efforts at brevity are just plain WRONG or even DANGEROUSLY WRONG to teach beginning programmers.  For example, Pg 19 Data Types section:----------------int - holds integer numbers up to a little over 2 million, for example, "int I = 2000000;."long - same as int.----------------WRONG, PROFESSOR!  This is not only a syntactically incorrect example, but a just plain wrong assertion.  If the reader does not know how to determine the (platform-specific) size of an "int" or "long", then the author has only served to confuse the matter further!Furthermore, I consider it a "cheapskate" tactic to ask readers to pay for the code from this book in electronic form (particularly when the book's code listings are so sloppy).  That said, I would not use the code, even if it had been supplied for free ... but it *might* have been interesting to have something to play around with...Have any of the reviewers actually USED any code from this book without substantial refactoring?The only use I could see for this book is for intermediate-advanced fin-techs, who want to review a few general algorithms for selected derivative calculations (futures, forwards, etc) ... but just be prepared to squint and suffer through reading the code